{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-716fff95\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"canvas-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"canvas\", {\n    ref: \"canvas\",\n    onMousemove: $setup.handleMouseMove\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","ref","onMousemove","$setup","handleMouseMove"],"sources":["/Users/p.pletmintsev/VSCodeProjects/kamgov.lk2/front/src/views/VisitorMessagesTab.vue"],"sourcesContent":["<template>\n  <div class=\"canvas-container\">\n    <canvas ref=\"canvas\" @mousemove=\"handleMouseMove\"></canvas>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, watch } from \"vue\";\n\nconst canvas = ref(null);\nconst context = ref(null);\nconst angle = ref(0);\n\nconst handleMouseMove = (event) => {\n  const rect = canvas.value.getBoundingClientRect();\n  const canvasCenterX = rect.left + rect.width / 2;\n  const canvasCenterY = rect.top + rect.height / 2;\n\n  const deltaX = event.clientX - canvasCenterX;\n  const deltaY = event.clientY - canvasCenterY;\n\n  angle.value = Math.atan2(deltaY, deltaX);\n};\n\nconst draw = () => {\n  context.value.clearRect(0, 0, canvas.value.width, canvas.value.height);\n\n  // Static part\n  context.value.fillStyle = \"#333\";\n  context.value.fillRect(90, 50, 20, 100);\n\n  // Swinging part\n  context.value.save();\n  context.value.translate(100, 150);\n  context.value.rotate(angle.value);\n  context.value.fillStyle = \"#666\";\n  context.value.fillRect(-10, 0, 20, 200);\n  context.value.restore();\n};\n\nonMounted(() => {\n  canvas.value.width = 200;\n  canvas.value.height = 400;\n  context.value = canvas.value.getContext(\"2d\");\n  draw();\n});\n\nwatch(angle, draw);\n</script>\n\n<style scoped>\n.canvas-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  background-color: #f0f0f0;\n}\n\ncanvas {\n  border: 1px solid #ccc;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAkB;;uBAA7BC,mBAAA,CAEM,OAFNC,UAEM,GADJC,mBAAA,CAA2D;IAAnDC,GAAG,EAAC,QAAQ;IAAEC,WAAS,EAAEC,MAAA,CAAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}