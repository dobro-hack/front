{"ast":null,"code":"import { ref, onMounted } from \"vue\";\nimport { fetchMessages } from \"@/api/messages\";\nexport default {\n  __name: 'MessagesTable',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const messages = ref([]);\n    const page = ref(1);\n    const limit = ref(10);\n    const loadMessages = async (page, limit) => {\n      try {\n        const data = await fetchMessages(page, limit);\n        messages.value = data;\n      } catch (error) {\n        console.error(\"Failed to load messages:\", error);\n      }\n    };\n    const nextPage = () => {\n      page.value += 1;\n      loadMessages(page.value, limit.value);\n    };\n    const prevPage = () => {\n      if (page.value > 1) {\n        page.value -= 1;\n        loadMessages(page.value, limit.value);\n      }\n    };\n    onMounted(() => {\n      loadMessages(page.value, limit.value);\n    });\n    const __returned__ = {\n      messages,\n      page,\n      limit,\n      loadMessages,\n      nextPage,\n      prevPage,\n      ref,\n      onMounted,\n      get fetchMessages() {\n        return fetchMessages;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","fetchMessages","messages","page","limit","loadMessages","data","value","error","console","nextPage","prevPage"],"sources":["/Users/p.pletmintsev/VSCodeProjects/kamgov.lk2/front/src/components/MessagesTable.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"pagination-controls\">\n      <button @click=\"prevPage\" :disabled=\"page === 1\">Previous</button>\n      <span>Page {{ page }}</span>\n      <button @click=\"nextPage\">Next</button>\n    </div>\n    <div class=\"table-wrapper\">\n      <table>\n        <thead>\n          <tr>\n            <th>Заголовок</th>\n            <th>Статус</th>\n            <th>Тип</th>\n            <th>Дата отправки</th>\n            <th>Пользователь</th>\n            <th>Парк</th>\n            <th>Маршрут</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"message in messages\" :key=\"message.message_id\">\n            <td>{{ message.message_title }}</td>\n            <td>{{ message.message_status }}</td>\n            <td>{{ message.message_type }}</td>\n            <td>{{ message.message_sent_at }}</td>\n            <td>{{ message.user_first_name }} {{ message.user_last_name }}</td>\n            <td>{{ message.park_name }}</td>\n            <td>{{ message.route_name }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from \"vue\";\nimport { fetchMessages } from \"@/api/messages\";\n\nconst messages = ref([]);\nconst page = ref(1);\nconst limit = ref(10);\n\nconst loadMessages = async (page, limit) => {\n  try {\n    const data = await fetchMessages(page, limit);\n    messages.value = data;\n  } catch (error) {\n    console.error(\"Failed to load messages:\", error);\n  }\n};\n\nconst nextPage = () => {\n  page.value += 1;\n  loadMessages(page.value, limit.value);\n};\n\nconst prevPage = () => {\n  if (page.value > 1) {\n    page.value -= 1;\n    loadMessages(page.value, limit.value);\n  }\n};\n\nonMounted(() => {\n  loadMessages(page.value, limit.value);\n});\n</script>\n"],"mappings":"AAqCA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,SAASC,aAAa,QAAQ,gBAAgB;;;;;;;IAE9C,MAAMC,QAAQ,GAAGH,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMI,IAAI,GAAGJ,GAAG,CAAC,CAAC,CAAC;IACnB,MAAMK,KAAK,GAAGL,GAAG,CAAC,EAAE,CAAC;IAErB,MAAMM,YAAY,GAAG,MAAAA,CAAOF,IAAI,EAAEC,KAAK,KAAK;MAC1C,IAAI;QACF,MAAME,IAAI,GAAG,MAAML,aAAa,CAACE,IAAI,EAAEC,KAAK,CAAC;QAC7CF,QAAQ,CAACK,KAAK,GAAGD,IAAI;MACvB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAED,MAAME,QAAQ,GAAGA,CAAA,KAAM;MACrBP,IAAI,CAACI,KAAK,IAAI,CAAC;MACfF,YAAY,CAACF,IAAI,CAACI,KAAK,EAAEH,KAAK,CAACG,KAAK,CAAC;IACvC,CAAC;IAED,MAAMI,QAAQ,GAAGA,CAAA,KAAM;MACrB,IAAIR,IAAI,CAACI,KAAK,GAAG,CAAC,EAAE;QAClBJ,IAAI,CAACI,KAAK,IAAI,CAAC;QACfF,YAAY,CAACF,IAAI,CAACI,KAAK,EAAEH,KAAK,CAACG,KAAK,CAAC;MACvC;IACF,CAAC;IAEDP,SAAS,CAAC,MAAM;MACdK,YAAY,CAACF,IAAI,CAACI,KAAK,EAAEH,KAAK,CAACG,KAAK,CAAC;IACvC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}