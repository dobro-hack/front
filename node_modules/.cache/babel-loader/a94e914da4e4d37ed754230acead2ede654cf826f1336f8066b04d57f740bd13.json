{"ast":null,"code":"import { ref, onMounted } from \"vue\";\nimport RequestsRow from \"./RequestsRow.vue\";\nimport { fetchRequests } from \"@/api/requests\";\nexport default {\n  __name: 'RequestsTable',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const requests = ref([]);\n    const page = ref(1);\n    const limit = ref(10);\n    const selectedRequest = ref(null);\n    const loadRequests = async () => {\n      try {\n        const data = await fetchRequests(page.value, limit.value);\n        requests.value = data;\n      } catch (error) {\n        console.error(\"Failed to load requests:\", error);\n      }\n    };\n    const setSelectedRequest = request => {\n      selectedRequest.value = request;\n    };\n    const approve = () => {\n      if (selectedRequest.value) {\n        selectedRequest.value.status = \"approved\";\n      }\n    };\n    const reject = () => {\n      if (selectedRequest.value) {\n        selectedRequest.value.status = \"declined\";\n      }\n    };\n    const nextPage = () => {\n      page.value += 1;\n      loadRequests(page.value, limit.value);\n    };\n    const prevPage = () => {\n      if (page.value > 1) {\n        page.value -= 1;\n        loadRequests(page.value, limit.value);\n      }\n    };\n    onMounted(() => {\n      loadRequests(page.value, limit.value);\n    });\n    const __returned__ = {\n      requests,\n      page,\n      limit,\n      selectedRequest,\n      loadRequests,\n      setSelectedRequest,\n      approve,\n      reject,\n      nextPage,\n      prevPage,\n      ref,\n      onMounted,\n      RequestsRow,\n      get fetchRequests() {\n        return fetchRequests;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","RequestsRow","fetchRequests","requests","page","limit","selectedRequest","loadRequests","data","value","error","console","setSelectedRequest","request","approve","status","reject","nextPage","prevPage"],"sources":["/Users/p.pletmintsev/VSCodeProjects/kamgov.lk2/front/src/components/RequestsTable.vue"],"sourcesContent":["<template>\n  <div class=\"table-wrapper\">\n    <table>\n      <thead>\n        <tr>\n          <th>Название объявления</th>\n          <th>Статус</th>\n          <th>Трансляция</th>\n          <th>Бюджет</th>\n          <th>Потрачено</th>\n          <th>Результат</th>\n        </tr>\n      </thead>\n      <tbody>\n        <RequestsRow\n          v-for=\"(request, index) in requests\"\n          :key=\"request.id\"\n          :request=\"request\"\n          :selectedRequest=\"selectedRequest\"\n          :setSelectedRequest=\"setSelectedRequest\"\n          :approve=\"approve\"\n          :reject=\"reject\"\n        />\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from \"vue\";\nimport RequestsRow from \"./RequestsRow.vue\";\nimport { fetchRequests } from \"@/api/requests\";\n\nconst requests = ref([]);\nconst page = ref(1);\nconst limit = ref(10);\nconst selectedRequest = ref(null);\n\nconst loadRequests = async () => {\n  try {\n    const data = await fetchRequests(page.value, limit.value);\n    requests.value = data;\n  } catch (error) {\n    console.error(\"Failed to load requests:\", error);\n  }\n};\n\nconst setSelectedRequest = (request) => {\n  selectedRequest.value = request;\n};\n\nconst approve = () => {\n  if (selectedRequest.value) {\n    selectedRequest.value.status = \"approved\";\n  }\n};\n\nconst reject = () => {\n  if (selectedRequest.value) {\n    selectedRequest.value.status = \"declined\";\n  }\n};\n\nconst nextPage = () => {\n  page.value += 1;\n  loadRequests(page.value, limit.value);\n};\n\nconst prevPage = () => {\n  if (page.value > 1) {\n    page.value -= 1;\n    loadRequests(page.value, limit.value);\n  }\n};\n\nonMounted(() => {\n  loadRequests(page.value, limit.value);\n});\n</script>\n\n<style>\n.table-wrapper {\n  border: 1px solid #e1e3e6;\n  border-radius: 16px;\n  overflow: hidden;\n}\n\ntable {\n  width: 100%;\n  border-collapse: collapse;\n  border: none;\n}\n\nth,\ntd {\n  padding: 8px;\n}\n\ntd {\n  border-top: 1px solid #ddd;\n}\n\nth {\n  background: #f5f5f5;\n  border-color: #e1e3e6;\n}\n\ntr:hover {\n  cursor: pointer;\n  background: #f9f9f9;\n}\n\ntr.m--active {\n  cursor: default;\n  background: #f9f9f9;\n  & td {\n    border-bottom-color: transparent;\n  }\n}\nbutton {\n  padding: 10px 20px;\n  margin-right: 10px;\n  border: none;\n  cursor: pointer;\n  font-size: 16px;\n}\nbutton:hover {\n  background-color: #f0f0f0;\n}\nbutton:nth-child(1) {\n  background-color: #28a745;\n  color: white;\n}\nbutton:nth-child(2) {\n  background-color: #dc3545;\n  color: white;\n}\n</style>\n"],"mappings":"AA6BA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,OAAOC,WAAW,MAAM,mBAAmB;AAC3C,SAASC,aAAa,QAAQ,gBAAgB;;;;;;;IAE9C,MAAMC,QAAQ,GAAGJ,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMK,IAAI,GAAGL,GAAG,CAAC,CAAC,CAAC;IACnB,MAAMM,KAAK,GAAGN,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMO,eAAe,GAAGP,GAAG,CAAC,IAAI,CAAC;IAEjC,MAAMQ,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMN,aAAa,CAACE,IAAI,CAACK,KAAK,EAAEJ,KAAK,CAACI,KAAK,CAAC;QACzDN,QAAQ,CAACM,KAAK,GAAGD,IAAI;MACvB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAED,MAAME,kBAAkB,GAAIC,OAAO,IAAK;MACtCP,eAAe,CAACG,KAAK,GAAGI,OAAO;IACjC,CAAC;IAED,MAAMC,OAAO,GAAGA,CAAA,KAAM;MACpB,IAAIR,eAAe,CAACG,KAAK,EAAE;QACzBH,eAAe,CAACG,KAAK,CAACM,MAAM,GAAG,UAAU;MAC3C;IACF,CAAC;IAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;MACnB,IAAIV,eAAe,CAACG,KAAK,EAAE;QACzBH,eAAe,CAACG,KAAK,CAACM,MAAM,GAAG,UAAU;MAC3C;IACF,CAAC;IAED,MAAME,QAAQ,GAAGA,CAAA,KAAM;MACrBb,IAAI,CAACK,KAAK,IAAI,CAAC;MACfF,YAAY,CAACH,IAAI,CAACK,KAAK,EAAEJ,KAAK,CAACI,KAAK,CAAC;IACvC,CAAC;IAED,MAAMS,QAAQ,GAAGA,CAAA,KAAM;MACrB,IAAId,IAAI,CAACK,KAAK,GAAG,CAAC,EAAE;QAClBL,IAAI,CAACK,KAAK,IAAI,CAAC;QACfF,YAAY,CAACH,IAAI,CAACK,KAAK,EAAEJ,KAAK,CAACI,KAAK,CAAC;MACvC;IACF,CAAC;IAEDT,SAAS,CAAC,MAAM;MACdO,YAAY,CAACH,IAAI,CAACK,KAAK,EAAEJ,KAAK,CAACI,KAAK,CAAC;IACvC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}